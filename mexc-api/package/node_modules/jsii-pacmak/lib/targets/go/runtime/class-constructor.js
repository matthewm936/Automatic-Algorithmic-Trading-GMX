"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClassConstructor = void 0;
const constants_1 = require("./constants");
const emit_arguments_1 = require("./emit-arguments");
const util_1 = require("./util");
class ClassConstructor {
    constructor(parent) {
        this.parent = parent;
    }
    emit(code) {
        util_1.emitInitialization(code);
        code.line();
        const resultVar = util_1.slugify(this.parent.parent.proxyName[0], this.parent.parameters.map((p) => p.name));
        const args = emit_arguments_1.emitArguments(code, this.parent.parameters, resultVar);
        code.line(`${resultVar} := ${this.parent.parent.proxyName}{}`);
        code.line();
        code.open(`${constants_1.JSII_CREATE_FUNC}(`);
        code.line(`"${this.parent.parent.fqn}",`);
        code.line(args ? `${args},` : 'nil, // no parameters');
        code.line(`&${resultVar},`);
        code.close(`)`);
        code.line();
        code.line(`return &${resultVar}`);
    }
    emitOverride(code, instanceVar) {
        util_1.emitInitialization(code);
        code.line();
        const args = emit_arguments_1.emitArguments(code, this.parent.parameters, instanceVar);
        code.open(`${constants_1.JSII_CREATE_FUNC}(`);
        code.line(`"${this.parent.parent.fqn}",`);
        code.line(args ? `${args},` : 'nil, // no parameters');
        code.line(`${instanceVar},`);
        code.close(')');
    }
}
exports.ClassConstructor = ClassConstructor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3MtY29uc3RydWN0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjbGFzcy1jb25zdHJ1Y3Rvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQSwyQ0FBK0M7QUFDL0MscURBQWlEO0FBQ2pELGlDQUFxRDtBQUVyRCxNQUFhLGdCQUFnQjtJQUMzQixZQUFtQyxNQUEwQjtRQUExQixXQUFNLEdBQU4sTUFBTSxDQUFvQjtJQUFHLENBQUM7SUFFMUQsSUFBSSxDQUFDLElBQWU7UUFDekIseUJBQWtCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBRVosTUFBTSxTQUFTLEdBQUcsY0FBTyxDQUN2QixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQy9CLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUMxQyxDQUFDO1FBRUYsTUFBTSxJQUFJLEdBQUcsOEJBQWEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFFcEUsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLFNBQVMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLElBQUksQ0FBQyxDQUFDO1FBQy9ELElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUVaLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyw0QkFBZ0IsR0FBRyxDQUFDLENBQUM7UUFFbEMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFDdkQsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFFNUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUVoQixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDWixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRU0sWUFBWSxDQUFDLElBQWUsRUFBRSxXQUFtQjtRQUN0RCx5QkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFFWixNQUFNLElBQUksR0FBRyw4QkFBYSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUV0RSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsNEJBQWdCLEdBQUcsQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQzFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQzdCLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEIsQ0FBQztDQUNGO0FBekNELDRDQXlDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvZGVNYWtlciB9IGZyb20gJ2NvZGVtYWtlcic7XG5cbmltcG9ydCB7IEdvQ2xhc3NDb25zdHJ1Y3RvciB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IEpTSUlfQ1JFQVRFX0ZVTkMgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBlbWl0QXJndW1lbnRzIH0gZnJvbSAnLi9lbWl0LWFyZ3VtZW50cyc7XG5pbXBvcnQgeyBzbHVnaWZ5LCBlbWl0SW5pdGlhbGl6YXRpb24gfSBmcm9tICcuL3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgQ2xhc3NDb25zdHJ1Y3RvciB7XG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgcGFyZW50OiBHb0NsYXNzQ29uc3RydWN0b3IpIHt9XG5cbiAgcHVibGljIGVtaXQoY29kZTogQ29kZU1ha2VyKSB7XG4gICAgZW1pdEluaXRpYWxpemF0aW9uKGNvZGUpO1xuICAgIGNvZGUubGluZSgpO1xuXG4gICAgY29uc3QgcmVzdWx0VmFyID0gc2x1Z2lmeShcbiAgICAgIHRoaXMucGFyZW50LnBhcmVudC5wcm94eU5hbWVbMF0sXG4gICAgICB0aGlzLnBhcmVudC5wYXJhbWV0ZXJzLm1hcCgocCkgPT4gcC5uYW1lKSxcbiAgICApO1xuXG4gICAgY29uc3QgYXJncyA9IGVtaXRBcmd1bWVudHMoY29kZSwgdGhpcy5wYXJlbnQucGFyYW1ldGVycywgcmVzdWx0VmFyKTtcblxuICAgIGNvZGUubGluZShgJHtyZXN1bHRWYXJ9IDo9ICR7dGhpcy5wYXJlbnQucGFyZW50LnByb3h5TmFtZX17fWApO1xuICAgIGNvZGUubGluZSgpO1xuXG4gICAgY29kZS5vcGVuKGAke0pTSUlfQ1JFQVRFX0ZVTkN9KGApO1xuXG4gICAgY29kZS5saW5lKGBcIiR7dGhpcy5wYXJlbnQucGFyZW50LmZxbn1cIixgKTtcbiAgICBjb2RlLmxpbmUoYXJncyA/IGAke2FyZ3N9LGAgOiAnbmlsLCAvLyBubyBwYXJhbWV0ZXJzJyk7XG4gICAgY29kZS5saW5lKGAmJHtyZXN1bHRWYXJ9LGApO1xuXG4gICAgY29kZS5jbG9zZShgKWApO1xuXG4gICAgY29kZS5saW5lKCk7XG4gICAgY29kZS5saW5lKGByZXR1cm4gJiR7cmVzdWx0VmFyfWApO1xuICB9XG5cbiAgcHVibGljIGVtaXRPdmVycmlkZShjb2RlOiBDb2RlTWFrZXIsIGluc3RhbmNlVmFyOiBzdHJpbmcpIHtcbiAgICBlbWl0SW5pdGlhbGl6YXRpb24oY29kZSk7XG4gICAgY29kZS5saW5lKCk7XG5cbiAgICBjb25zdCBhcmdzID0gZW1pdEFyZ3VtZW50cyhjb2RlLCB0aGlzLnBhcmVudC5wYXJhbWV0ZXJzLCBpbnN0YW5jZVZhcik7XG5cbiAgICBjb2RlLm9wZW4oYCR7SlNJSV9DUkVBVEVfRlVOQ30oYCk7XG4gICAgY29kZS5saW5lKGBcIiR7dGhpcy5wYXJlbnQucGFyZW50LmZxbn1cIixgKTtcbiAgICBjb2RlLmxpbmUoYXJncyA/IGAke2FyZ3N9LGAgOiAnbmlsLCAvLyBubyBwYXJhbWV0ZXJzJyk7XG4gICAgY29kZS5saW5lKGAke2luc3RhbmNlVmFyfSxgKTtcbiAgICBjb2RlLmNsb3NlKCcpJyk7XG4gIH1cbn1cbiJdfQ==