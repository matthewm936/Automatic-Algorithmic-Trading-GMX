"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticSetProperty = exports.StaticGetProperty = exports.SetProperty = exports.GetProperty = void 0;
const constants_1 = require("./constants");
const function_call_1 = require("./function-call");
const util_1 = require("./util");
class GetProperty extends function_call_1.FunctionCall {
    constructor(parent) {
        super(parent);
        this.parent = parent;
    }
    emit(code) {
        const resultVar = util_1.slugify('returns', [this.parent.instanceArg]);
        code.line(`var ${resultVar} ${this.returnType}`);
        code.open(`${constants_1.JSII_GET_FUNC}(`);
        code.line(`${this.parent.instanceArg},`);
        code.line(`"${this.parent.property.name}",`);
        code.line(`&${resultVar},`);
        code.close(`)`);
        code.line(`return ${resultVar}`);
    }
}
exports.GetProperty = GetProperty;
class SetProperty {
    constructor(parent) {
        this.parent = parent;
    }
    emit(code) {
        code.open(`${constants_1.JSII_SET_FUNC}(`);
        code.line(`${this.parent.instanceArg},`);
        code.line(`"${this.parent.property.name}",`);
        code.line(`val,`);
        code.close(`)`);
    }
}
exports.SetProperty = SetProperty;
class StaticGetProperty extends function_call_1.FunctionCall {
    constructor(parent) {
        super(parent);
        this.parent = parent;
    }
    emit(code) {
        util_1.emitInitialization(code);
        const resultVar = util_1.slugify('returns', []);
        code.line(`var ${resultVar} ${this.returnType}`);
        code.open(`${constants_1.JSII_SGET_FUNC}(`);
        code.line(`"${this.parent.parent.fqn}",`);
        code.line(`"${this.parent.property.name}",`);
        code.line(`&${resultVar},`);
        code.close(`)`);
        code.line(`return ${resultVar}`);
    }
}
exports.StaticGetProperty = StaticGetProperty;
class StaticSetProperty {
    constructor(parent) {
        this.parent = parent;
    }
    emit(code) {
        util_1.emitInitialization(code);
        code.open(`${constants_1.JSII_SSET_FUNC}(`);
        code.line(`"${this.parent.parent.fqn}",`);
        code.line(`"${this.parent.property.name}",`);
        code.line(`val,`);
        code.close(`)`);
    }
}
exports.StaticSetProperty = StaticSetProperty;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcGVydHktYWNjZXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicHJvcGVydHktYWNjZXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdBLDJDQUtxQjtBQUNyQixtREFBK0M7QUFDL0MsaUNBQXFEO0FBRXJELE1BQWEsV0FBWSxTQUFRLDRCQUFZO0lBQzNDLFlBQW1DLE1BQWtCO1FBQ25ELEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztRQURtQixXQUFNLEdBQU4sTUFBTSxDQUFZO0lBRXJELENBQUM7SUFFTSxJQUFJLENBQUMsSUFBZTtRQUN6QixNQUFNLFNBQVMsR0FBRyxjQUFPLENBQUMsU0FBUyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxTQUFTLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7UUFFakQsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLHlCQUFhLEdBQUcsQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksSUFBSSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFDNUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUVoQixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUNuQyxDQUFDO0NBQ0Y7QUFqQkQsa0NBaUJDO0FBRUQsTUFBYSxXQUFXO0lBQ3RCLFlBQW1DLE1BQWtCO1FBQWxCLFdBQU0sR0FBTixNQUFNLENBQVk7SUFBRyxDQUFDO0lBRWxELElBQUksQ0FBQyxJQUFlO1FBQ3pCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyx5QkFBYSxHQUFHLENBQUMsQ0FBQztRQUMvQixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNsQixDQUFDO0NBQ0Y7QUFWRCxrQ0FVQztBQUVELE1BQWEsaUJBQWtCLFNBQVEsNEJBQVk7SUFDakQsWUFBbUMsTUFBa0I7UUFDbkQsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRG1CLFdBQU0sR0FBTixNQUFNLENBQVk7SUFFckQsQ0FBQztJQUVNLElBQUksQ0FBQyxJQUFlO1FBQ3pCLHlCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pCLE1BQU0sU0FBUyxHQUFHLGNBQU8sQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLFNBQVMsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztRQUVqRCxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsMEJBQWMsR0FBRyxDQUFDLENBQUM7UUFDaEMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksSUFBSSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFDNUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUVoQixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUNuQyxDQUFDO0NBQ0Y7QUFsQkQsOENBa0JDO0FBRUQsTUFBYSxpQkFBaUI7SUFDNUIsWUFBbUMsTUFBa0I7UUFBbEIsV0FBTSxHQUFOLE1BQU0sQ0FBWTtJQUFHLENBQUM7SUFFbEQsSUFBSSxDQUFDLElBQWU7UUFDekIseUJBQWtCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFekIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLDBCQUFjLEdBQUcsQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQzFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNsQixDQUFDO0NBQ0Y7QUFaRCw4Q0FZQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvZGVNYWtlciB9IGZyb20gJ2NvZGVtYWtlcic7XG5cbmltcG9ydCB7IEdvUHJvcGVydHkgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQge1xuICBKU0lJX0dFVF9GVU5DLFxuICBKU0lJX1NFVF9GVU5DLFxuICBKU0lJX1NHRVRfRlVOQyxcbiAgSlNJSV9TU0VUX0ZVTkMsXG59IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IEZ1bmN0aW9uQ2FsbCB9IGZyb20gJy4vZnVuY3Rpb24tY2FsbCc7XG5pbXBvcnQgeyBzbHVnaWZ5LCBlbWl0SW5pdGlhbGl6YXRpb24gfSBmcm9tICcuL3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgR2V0UHJvcGVydHkgZXh0ZW5kcyBGdW5jdGlvbkNhbGwge1xuICBwdWJsaWMgY29uc3RydWN0b3IocHVibGljIHJlYWRvbmx5IHBhcmVudDogR29Qcm9wZXJ0eSkge1xuICAgIHN1cGVyKHBhcmVudCk7XG4gIH1cblxuICBwdWJsaWMgZW1pdChjb2RlOiBDb2RlTWFrZXIpIHtcbiAgICBjb25zdCByZXN1bHRWYXIgPSBzbHVnaWZ5KCdyZXR1cm5zJywgW3RoaXMucGFyZW50Lmluc3RhbmNlQXJnXSk7XG4gICAgY29kZS5saW5lKGB2YXIgJHtyZXN1bHRWYXJ9ICR7dGhpcy5yZXR1cm5UeXBlfWApO1xuXG4gICAgY29kZS5vcGVuKGAke0pTSUlfR0VUX0ZVTkN9KGApO1xuICAgIGNvZGUubGluZShgJHt0aGlzLnBhcmVudC5pbnN0YW5jZUFyZ30sYCk7XG4gICAgY29kZS5saW5lKGBcIiR7dGhpcy5wYXJlbnQucHJvcGVydHkubmFtZX1cIixgKTtcbiAgICBjb2RlLmxpbmUoYCYke3Jlc3VsdFZhcn0sYCk7XG4gICAgY29kZS5jbG9zZShgKWApO1xuXG4gICAgY29kZS5saW5lKGByZXR1cm4gJHtyZXN1bHRWYXJ9YCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFNldFByb3BlcnR5IHtcbiAgcHVibGljIGNvbnN0cnVjdG9yKHB1YmxpYyByZWFkb25seSBwYXJlbnQ6IEdvUHJvcGVydHkpIHt9XG5cbiAgcHVibGljIGVtaXQoY29kZTogQ29kZU1ha2VyKSB7XG4gICAgY29kZS5vcGVuKGAke0pTSUlfU0VUX0ZVTkN9KGApO1xuICAgIGNvZGUubGluZShgJHt0aGlzLnBhcmVudC5pbnN0YW5jZUFyZ30sYCk7XG4gICAgY29kZS5saW5lKGBcIiR7dGhpcy5wYXJlbnQucHJvcGVydHkubmFtZX1cIixgKTtcbiAgICBjb2RlLmxpbmUoYHZhbCxgKTtcbiAgICBjb2RlLmNsb3NlKGApYCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFN0YXRpY0dldFByb3BlcnR5IGV4dGVuZHMgRnVuY3Rpb25DYWxsIHtcbiAgcHVibGljIGNvbnN0cnVjdG9yKHB1YmxpYyByZWFkb25seSBwYXJlbnQ6IEdvUHJvcGVydHkpIHtcbiAgICBzdXBlcihwYXJlbnQpO1xuICB9XG5cbiAgcHVibGljIGVtaXQoY29kZTogQ29kZU1ha2VyKSB7XG4gICAgZW1pdEluaXRpYWxpemF0aW9uKGNvZGUpO1xuICAgIGNvbnN0IHJlc3VsdFZhciA9IHNsdWdpZnkoJ3JldHVybnMnLCBbXSk7XG4gICAgY29kZS5saW5lKGB2YXIgJHtyZXN1bHRWYXJ9ICR7dGhpcy5yZXR1cm5UeXBlfWApO1xuXG4gICAgY29kZS5vcGVuKGAke0pTSUlfU0dFVF9GVU5DfShgKTtcbiAgICBjb2RlLmxpbmUoYFwiJHt0aGlzLnBhcmVudC5wYXJlbnQuZnFufVwiLGApO1xuICAgIGNvZGUubGluZShgXCIke3RoaXMucGFyZW50LnByb3BlcnR5Lm5hbWV9XCIsYCk7XG4gICAgY29kZS5saW5lKGAmJHtyZXN1bHRWYXJ9LGApO1xuICAgIGNvZGUuY2xvc2UoYClgKTtcblxuICAgIGNvZGUubGluZShgcmV0dXJuICR7cmVzdWx0VmFyfWApO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTdGF0aWNTZXRQcm9wZXJ0eSB7XG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgcGFyZW50OiBHb1Byb3BlcnR5KSB7fVxuXG4gIHB1YmxpYyBlbWl0KGNvZGU6IENvZGVNYWtlcikge1xuICAgIGVtaXRJbml0aWFsaXphdGlvbihjb2RlKTtcblxuICAgIGNvZGUub3BlbihgJHtKU0lJX1NTRVRfRlVOQ30oYCk7XG4gICAgY29kZS5saW5lKGBcIiR7dGhpcy5wYXJlbnQucGFyZW50LmZxbn1cIixgKTtcbiAgICBjb2RlLmxpbmUoYFwiJHt0aGlzLnBhcmVudC5wcm9wZXJ0eS5uYW1lfVwiLGApO1xuICAgIGNvZGUubGluZShgdmFsLGApO1xuICAgIGNvZGUuY2xvc2UoYClgKTtcbiAgfVxufVxuIl19