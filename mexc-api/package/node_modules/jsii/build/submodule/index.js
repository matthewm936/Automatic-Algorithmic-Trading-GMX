"use strict";
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.NestingClass = exports.Reflector = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
/**
 * @deprecated
 */
class Reflector {
    /**
     * @deprecated
     */
    asMap(reflectable) {
        return reflectable.entries.reduce((mapping, entry) => {
            mapping[entry.key] = entry.value;
            return mapping;
        }, {});
    }
}
exports.Reflector = Reflector;
_a = JSII_RTTI_SYMBOL_1;
Reflector[_a] = { fqn: "@scope/jsii-calc-lib.submodule.Reflector", version: "0.0.0" };
/**
 * (deprecated) This class is here to show we can use nested classes across module boundaries.
 *
 * @deprecated
 */
class NestingClass {
    constructor() { }
}
exports.NestingClass = NestingClass;
_b = JSII_RTTI_SYMBOL_1;
NestingClass[_b] = { fqn: "@scope/jsii-calc-lib.submodule.NestingClass", version: "0.0.0" };
// eslint-disable-next-line @typescript-eslint/no-namespace
/**
 * (deprecated) This class is here to show we can use nested classes across module boundaries.
 *
 * @deprecated
 */
(function (NestingClass) {
    var _c;
    /**
     * (deprecated) This class is here to show we can use nested classes across module boundaries.
     *
     * @deprecated
     */
    class NestedClass {
        constructor() {
            /**
             * @deprecated
             */
            this.property = 'property';
        }
    }
    _c = JSII_RTTI_SYMBOL_1;
    NestedClass[_c] = { fqn: "@scope/jsii-calc-lib.submodule.NestingClass.NestedClass", version: "0.0.0" };
    NestingClass.NestedClass = NestedClass;
})(NestingClass = exports.NestingClass || (exports.NestingClass = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9saWIvc3VibW9kdWxlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBU0EsTUFBYSxTQUFTOzs7O0lBQ2IsS0FBSyxDQUFDLFdBQXlCO1FBQ3BDLE9BQU8sV0FBVyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDbkQsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDO1lBQ2pDLE9BQU8sT0FBTyxDQUFDO1FBQ2pCLENBQUMsRUFBRSxFQUE2QixDQUFDLENBQUM7SUFDcEMsQ0FBQzs7QUFOSCw4QkFPQzs7Ozs7Ozs7QUFHRCxNQUFhLFlBQVk7SUFDdkIsZ0JBQXVCLENBQUM7O0FBRDFCLG9DQUVDOzs7QUFDRCwyREFBMkQ7Ozs7OztBQUMzRCxXQUFpQixZQUFZOzs7Ozs7O0lBRTNCLE1BQWEsV0FBVztRQUF4Qjs7OztZQUNrQixhQUFRLEdBQVcsVUFBVSxDQUFDO1NBQy9DOzs7O0lBRlksd0JBQVcsY0FFdkIsQ0FBQTtBQU1ILENBQUMsRUFWZ0IsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUFVNUIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIElSZWZsZWN0YWJsZSB7XG4gIHJlYWRvbmx5IGVudHJpZXM6IFJlZmxlY3RhYmxlRW50cnlbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSZWZsZWN0YWJsZUVudHJ5IHtcbiAgcmVhZG9ubHkga2V5OiBzdHJpbmc7XG4gIHJlYWRvbmx5IHZhbHVlOiB1bmtub3duO1xufVxuXG5leHBvcnQgY2xhc3MgUmVmbGVjdG9yIHtcbiAgcHVibGljIGFzTWFwKHJlZmxlY3RhYmxlOiBJUmVmbGVjdGFibGUpOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPiB7XG4gICAgcmV0dXJuIHJlZmxlY3RhYmxlLmVudHJpZXMucmVkdWNlKChtYXBwaW5nLCBlbnRyeSkgPT4ge1xuICAgICAgbWFwcGluZ1tlbnRyeS5rZXldID0gZW50cnkudmFsdWU7XG4gICAgICByZXR1cm4gbWFwcGluZztcbiAgICB9LCB7fSBhcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPik7XG4gIH1cbn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbmV4cG9ydCBjbGFzcyBOZXN0aW5nQ2xhc3Mge1xuICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge31cbn1cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbmFtZXNwYWNlXG5leHBvcnQgbmFtZXNwYWNlIE5lc3RpbmdDbGFzcyB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICBleHBvcnQgY2xhc3MgTmVzdGVkQ2xhc3Mge1xuICAgIHB1YmxpYyByZWFkb25seSBwcm9wZXJ0eTogc3RyaW5nID0gJ3Byb3BlcnR5JztcbiAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICBleHBvcnQgaW50ZXJmYWNlIE5lc3RlZFN0cnVjdCB7XG4gICAgcmVhZG9ubHkgbmFtZTogc3RyaW5nO1xuICB9XG59XG4iXX0=