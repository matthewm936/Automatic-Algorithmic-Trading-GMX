"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lib_1 = require("../lib");
// ----------------------------------------------------------------------
test('test parsing enum with two members and no values', async () => {
    const assembly = await lib_1.sourceToAssemblyHelper(`
    export enum Foo {
      BAR,
      BAZ
    }
  `);
    expect(assembly.types['testpkg.Foo']).toEqual({
        assembly: 'testpkg',
        fqn: 'testpkg.Foo',
        kind: 'enum',
        members: [{ name: 'BAR' }, { name: 'BAZ' }],
        locationInModule: { filename: 'index.ts', line: 2 },
        name: 'Foo',
        symbolId: 'index:Foo',
    });
});
// ----------------------------------------------------------------------
test('test parsing enum with two members and assigned values', async () => {
    const assembly = await lib_1.sourceToAssemblyHelper(`
    export enum Foo {
      BAR = 'Bar',
      BAZ = 'Baz'
    }
  `);
    expect(assembly.types['testpkg.Foo']).toEqual({
        assembly: 'testpkg',
        fqn: 'testpkg.Foo',
        kind: 'enum',
        members: [{ name: 'BAR' }, { name: 'BAZ' }],
        locationInModule: { filename: 'index.ts', line: 2 },
        name: 'Foo',
        symbolId: 'index:Foo',
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bXMudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImVudW1zLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnQ0FBZ0Q7QUFFaEQseUVBQXlFO0FBQ3pFLElBQUksQ0FBQyxrREFBa0QsRUFBRSxLQUFLLElBQUksRUFBRTtJQUNsRSxNQUFNLFFBQVEsR0FBRyxNQUFNLDRCQUFzQixDQUFDOzs7OztHQUs3QyxDQUFDLENBQUM7SUFFSCxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUM3QyxRQUFRLEVBQUUsU0FBUztRQUNuQixHQUFHLEVBQUUsYUFBYTtRQUNsQixJQUFJLEVBQUUsTUFBTTtRQUNaLE9BQU8sRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDO1FBQzNDLGdCQUFnQixFQUFFLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFO1FBQ25ELElBQUksRUFBRSxLQUFLO1FBQ1gsUUFBUSxFQUFFLFdBQVc7S0FDdEIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUM7QUFFSCx5RUFBeUU7QUFDekUsSUFBSSxDQUFDLHdEQUF3RCxFQUFFLEtBQUssSUFBSSxFQUFFO0lBQ3hFLE1BQU0sUUFBUSxHQUFHLE1BQU0sNEJBQXNCLENBQUM7Ozs7O0dBSzdDLENBQUMsQ0FBQztJQUVILE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO1FBQzdDLFFBQVEsRUFBRSxTQUFTO1FBQ25CLEdBQUcsRUFBRSxhQUFhO1FBQ2xCLElBQUksRUFBRSxNQUFNO1FBQ1osT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUM7UUFDM0MsZ0JBQWdCLEVBQUUsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUU7UUFDbkQsSUFBSSxFQUFFLEtBQUs7UUFDWCxRQUFRLEVBQUUsV0FBVztLQUN0QixDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNvdXJjZVRvQXNzZW1ibHlIZWxwZXIgfSBmcm9tICcuLi9saWInO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG50ZXN0KCd0ZXN0IHBhcnNpbmcgZW51bSB3aXRoIHR3byBtZW1iZXJzIGFuZCBubyB2YWx1ZXMnLCBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IGFzc2VtYmx5ID0gYXdhaXQgc291cmNlVG9Bc3NlbWJseUhlbHBlcihgXG4gICAgZXhwb3J0IGVudW0gRm9vIHtcbiAgICAgIEJBUixcbiAgICAgIEJBWlxuICAgIH1cbiAgYCk7XG5cbiAgZXhwZWN0KGFzc2VtYmx5LnR5cGVzIVsndGVzdHBrZy5Gb28nXSkudG9FcXVhbCh7XG4gICAgYXNzZW1ibHk6ICd0ZXN0cGtnJyxcbiAgICBmcW46ICd0ZXN0cGtnLkZvbycsXG4gICAga2luZDogJ2VudW0nLFxuICAgIG1lbWJlcnM6IFt7IG5hbWU6ICdCQVInIH0sIHsgbmFtZTogJ0JBWicgfV0sXG4gICAgbG9jYXRpb25Jbk1vZHVsZTogeyBmaWxlbmFtZTogJ2luZGV4LnRzJywgbGluZTogMiB9LFxuICAgIG5hbWU6ICdGb28nLFxuICAgIHN5bWJvbElkOiAnaW5kZXg6Rm9vJyxcbiAgfSk7XG59KTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxudGVzdCgndGVzdCBwYXJzaW5nIGVudW0gd2l0aCB0d28gbWVtYmVycyBhbmQgYXNzaWduZWQgdmFsdWVzJywgYXN5bmMgKCkgPT4ge1xuICBjb25zdCBhc3NlbWJseSA9IGF3YWl0IHNvdXJjZVRvQXNzZW1ibHlIZWxwZXIoYFxuICAgIGV4cG9ydCBlbnVtIEZvbyB7XG4gICAgICBCQVIgPSAnQmFyJyxcbiAgICAgIEJBWiA9ICdCYXonXG4gICAgfVxuICBgKTtcblxuICBleHBlY3QoYXNzZW1ibHkudHlwZXMhWyd0ZXN0cGtnLkZvbyddKS50b0VxdWFsKHtcbiAgICBhc3NlbWJseTogJ3Rlc3Rwa2cnLFxuICAgIGZxbjogJ3Rlc3Rwa2cuRm9vJyxcbiAgICBraW5kOiAnZW51bScsXG4gICAgbWVtYmVyczogW3sgbmFtZTogJ0JBUicgfSwgeyBuYW1lOiAnQkFaJyB9XSxcbiAgICBsb2NhdGlvbkluTW9kdWxlOiB7IGZpbGVuYW1lOiAnaW5kZXgudHMnLCBsaW5lOiAyIH0sXG4gICAgbmFtZTogJ0ZvbycsXG4gICAgc3ltYm9sSWQ6ICdpbmRleDpGb28nLFxuICB9KTtcbn0pO1xuIl19